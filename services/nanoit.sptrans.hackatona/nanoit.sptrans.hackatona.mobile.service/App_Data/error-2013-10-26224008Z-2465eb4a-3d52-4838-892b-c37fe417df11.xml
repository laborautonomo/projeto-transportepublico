<error errorId="2465eb4a-3d52-4838-892b-c37fe417df11" host="BRUNEX" type="System.ComponentModel.Win32Exception" message="Este host não é conhecido" detail="FluentNHibernate.Cfg.FluentConfigurationException: An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.&#xD;&#xA;&#xD;&#xA; ---&gt; System.Data.SqlClient.SqlException: Erro de rede ou específico à instância ao estabelecer conexão com o SQL Server. O servidor não foi encontrado ou não estava acessível. Verifique se o nome da instância está correto e se o SQL Server está configurado para permitir conexões remotas. (provider: TCP Provider, error: 0 - Este host não é conhecido.) ---&gt; System.ComponentModel.Win32Exception: Este host não é conhecido&#xD;&#xA;   --- Fim do rastreamento de pilha de exceções internas ---&#xD;&#xA;   em System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)&#xD;&#xA;   em System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)&#xD;&#xA;   em System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)&#xD;&#xA;   em System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)&#xD;&#xA;   em System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)&#xD;&#xA;   em System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)&#xD;&#xA;   em System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)&#xD;&#xA;   em System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)&#xD;&#xA;   em System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)&#xD;&#xA;   em System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)&#xD;&#xA;   em System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)&#xD;&#xA;   em System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)&#xD;&#xA;   em System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)&#xD;&#xA;   em System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)&#xD;&#xA;   em System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)&#xD;&#xA;   em System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)&#xD;&#xA;   em System.Data.SqlClient.SqlConnection.Open()&#xD;&#xA;   em NHibernate.Connection.DriverConnectionProvider.GetConnection()&#xD;&#xA;   em NHibernate.Tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.Prepare()&#xD;&#xA;   em NHibernate.Tool.hbm2ddl.SchemaMetadataUpdater.GetReservedWords(Dialect dialect, IConnectionHelper connectionHelper)&#xD;&#xA;   em NHibernate.Tool.hbm2ddl.SchemaMetadataUpdater.Update(ISessionFactory sessionFactory)&#xD;&#xA;   em NHibernate.Impl.SessionFactoryImpl..ctor(Configuration cfg, IMapping mapping, Settings settings, EventListeners listeners)&#xD;&#xA;   em NHibernate.Cfg.Configuration.BuildSessionFactory()&#xD;&#xA;   em FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory()&#xD;&#xA;   --- Fim do rastreamento de pilha de exceções internas ---&#xD;&#xA;   em FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory()&#xD;&#xA;   em nanoit.sptrans.hackatona.core.Infra.Repository.HibernateConnection.CreateSession() na c:\Users\Bruno\Documents\Visual Studio 2012\Projects\nanoit.sptrans.hackatona\nanoit.sptrans.hackatona.mobile.core\Infra\Repository\Connection\HibernateConnection.cs:linha 49&#xD;&#xA;   em nanoit.sptrans.hackatona.core.Infra.Repository.HibernateConnection.get_Connection() na c:\Users\Bruno\Documents\Visual Studio 2012\Projects\nanoit.sptrans.hackatona\nanoit.sptrans.hackatona.mobile.core\Infra\Repository\Connection\HibernateConnection.cs:linha 21&#xD;&#xA;   em nanoit.sptrans.hackatona.core.Infra.Repository.HibernateRepository`1.FindMany(Expression`1 queryExpression) na c:\Users\Bruno\Documents\Visual Studio 2012\Projects\nanoit.sptrans.hackatona\nanoit.sptrans.hackatona.mobile.core\Infra\Repository\Connection\HibernateRepository.cs:linha 136&#xD;&#xA;   em nanoit.sptrans.hackatona.core.application.StopApplication.GetStopByLine(String prefix) na c:\Users\Bruno\Documents\Visual Studio 2012\Projects\nanoit.sptrans.hackatona\nanoit.sptrans.hackatona.mobile.core\Application\StopApplication.cs:linha 33&#xD;&#xA;   em nanoit.sptrans.hackatona.service.BusService.PesquisarPontosPorLinha(String Prefixo) na c:\Users\Bruno\Documents\Visual Studio 2012\Projects\nanoit.sptrans.hackatona\nanoit.sptrans.hackatona.mobile.service\BusService.svc.cs:linha 452&#xD;&#xA;&#xD;&#xA;" time="2013-10-26T22:40:08.6862210Z" />